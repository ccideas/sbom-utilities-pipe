definitions:
  steps:
    - step: &build-docker-image
        name: 'Build Docker Image'
        script:
          - docker build --build-arg ARCH=amd64 --tag "${BITBUCKET_REPO_SLUG}:local" .
          - docker save "${BITBUCKET_REPO_SLUG}:local" --output "${BITBUCKET_REPO_SLUG}.tar"
        services:
          - docker
        caches:
          - docker
        artifacts:
          - "*.tar"
    - step: &docker-lint
        image: hadolint/hadolint:v2.12.0-alpine
        name: 'Docker Lint'
        script:
          - echo "Linting Dockerfile(s)"
          - hadolint Dockerfile || echo "found linting issues in Dockerfile"
    - step: &build-test
        image: golang:1.21.1-alpine3.18
        name: 'Build & Test'
        script:
          - go build -o bin/sbom-utils
          - apk add bash
          - go test -v -covermode=count -coverprofile=profile.out sbom-utilities/utils
        artifacts:
          - "bin/*"
          - "profile.out"
    - step: &go-formatter
        image: golang:1.21.1-alpine3.18
        name: 'Check Go Formatting'
        script:
          - gofmt -s -d $(find . -name "*.go")
    - step: &go-lint-yourself
        image: golang:1.21.1-alpine3.18
        name: 'Go Linter'
        script:
          - wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.54.2
          - bin/golangci-lint run ./...

pipelines:
  default:
    - parallel:
        - step: *docker-lint
        - step: *build-docker-image
        - step: *build-test
        - step: *go-formatter
        - step: *go-lint-yourself
  custom:
    push to Github:
      - step:
          name: push branch to github
          image: alpine/git:1.0.26
          services:
            - docker
          caches:
            - docker
          script:
            - echo -n ${GITHUB_DEPLOY_KEY} | base64 -d > id_ed25519_github_sbom-utilities-pipe_deploy
            - chmod 600 id_ed25519_github_sbom-utilities-pipe_deploy
            - export GIT_SSH_COMMAND="ssh -i id_ed25519_github_sbom-utilities-pipe_deploy"
            - git remote add github "git@github.com:ccideas/sbom-utilities-pipe.git"
            - git checkout ${BITBUCKET_BRANCH}
            - git pull
            - git push github ${BITBUCKET_BRANCH}
            - rm id_ed25519_github_sbom-utilities-pipe_deploy
    push to Dockerhub (dev):
      - step: *build-docker-image
      - step:
          name: 'Publish Dev Docker Image'
          deployment: Development
          trigger: manual
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            - docker load --input "${BITBUCKET_REPO_SLUG}.tar"
            - docker tag "${BITBUCKET_REPO_SLUG}:local" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${DEV_VERSION}-${BITBUCKET_BUILD_NUMBER}"
            - docker push "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${DEV_VERSION}-${BITBUCKET_BUILD_NUMBER}"
          services:
            - docker
    push to Dockerhub (prod):
      - variables:
          - name: PRODUCTION_VERSION
      - step: *build-docker-image
      - step:
          name: 'Publish Dev Docker Image'
          deployment: Production
          trigger: manual
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            - docker load --input "${BITBUCKET_REPO_SLUG}.tar"
            - docker tag "${BITBUCKET_REPO_SLUG}:local" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${PRODUCTION_VERSION}"
            - docker push "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${PRODUCTION_VERSION}"
          services:
            - docker
      
